#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Commanigy.Transmit.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="transmit_development")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertInvitation(Invitation instance);
    partial void UpdateInvitation(Invitation instance);
    partial void DeleteInvitation(Invitation instance);
    partial void InsertFile(File instance);
    partial void UpdateFile(File instance);
    partial void DeleteFile(File instance);
    partial void InsertTransfer(Transfer instance);
    partial void UpdateTransfer(Transfer instance);
    partial void DeleteTransfer(Transfer instance);
    partial void InsertPackage(Package instance);
    partial void UpdatePackage(Package instance);
    partial void DeletePackage(Package instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertMessage(Message instance);
    partial void UpdateMessage(Message instance);
    partial void DeleteMessage(Message instance);
    partial void InsertSetting(Setting instance);
    partial void UpdateSetting(Setting instance);
    partial void DeleteSetting(Setting instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::Commanigy.Transmit.Data.Properties.Settings.Default.transmitConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Invitation> Invitations
		{
			get
			{
				return this.GetTable<Invitation>();
			}
		}
		
		public System.Data.Linq.Table<File> Files
		{
			get
			{
				return this.GetTable<File>();
			}
		}
		
		public System.Data.Linq.Table<Transfer> Transfers
		{
			get
			{
				return this.GetTable<Transfer>();
			}
		}
		
		public System.Data.Linq.Table<Log> Logs
		{
			get
			{
				return this.GetTable<Log>();
			}
		}
		
		public System.Data.Linq.Table<Package> Packages
		{
			get
			{
				return this.GetTable<Package>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Message> Messages
		{
			get
			{
				return this.GetTable<Message>();
			}
		}
		
		public System.Data.Linq.Table<Setting> Settings
		{
			get
			{
				return this.GetTable<Setting>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invitations")]
	public partial class Invitation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _SenderMail;
		
		private string _SenderDisplayName;
		
		private string _Message;
		
		private string _RecipientMail;
		
		private string _RecipientDisplayName;
		
		private string _Code;
		
		private System.DateTime _CreatedAt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSenderMailChanging(string value);
    partial void OnSenderMailChanged();
    partial void OnSenderDisplayNameChanging(string value);
    partial void OnSenderDisplayNameChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnRecipientMailChanging(string value);
    partial void OnRecipientMailChanged();
    partial void OnRecipientDisplayNameChanging(string value);
    partial void OnRecipientDisplayNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public Invitation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderMail", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string SenderMail
		{
			get
			{
				return this._SenderMail;
			}
			set
			{
				if ((this._SenderMail != value))
				{
					this.OnSenderMailChanging(value);
					this.SendPropertyChanging();
					this._SenderMail = value;
					this.SendPropertyChanged("SenderMail");
					this.OnSenderMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderDisplayName", DbType="NVarChar(128)")]
		public string SenderDisplayName
		{
			get
			{
				return this._SenderDisplayName;
			}
			set
			{
				if ((this._SenderDisplayName != value))
				{
					this.OnSenderDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._SenderDisplayName = value;
					this.SendPropertyChanged("SenderDisplayName");
					this.OnSenderDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientMail", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string RecipientMail
		{
			get
			{
				return this._RecipientMail;
			}
			set
			{
				if ((this._RecipientMail != value))
				{
					this.OnRecipientMailChanging(value);
					this.SendPropertyChanging();
					this._RecipientMail = value;
					this.SendPropertyChanged("RecipientMail");
					this.OnRecipientMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientDisplayName", DbType="NVarChar(128)")]
		public string RecipientDisplayName
		{
			get
			{
				return this._RecipientDisplayName;
			}
			set
			{
				if ((this._RecipientDisplayName != value))
				{
					this.OnRecipientDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._RecipientDisplayName = value;
					this.SendPropertyChanged("RecipientDisplayName");
					this.OnRecipientDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Files")]
	public partial class File : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PackageID;
		
		private string _FileHash;
		
		private long _FileSize;
		
		private int _DownloadCount;
		
		private System.DateTime _CreatedAt;
		
		private EntityRef<Package> _Package;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnFileHashChanging(string value);
    partial void OnFileHashChanged();
    partial void OnFileSizeChanging(long value);
    partial void OnFileSizeChanged();
    partial void OnDownloadCountChanging(int value);
    partial void OnDownloadCountChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public File()
		{
			this._Package = default(EntityRef<Package>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int NOT NULL")]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileHash", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string FileHash
		{
			get
			{
				return this._FileHash;
			}
			set
			{
				if ((this._FileHash != value))
				{
					this.OnFileHashChanging(value);
					this.SendPropertyChanging();
					this._FileHash = value;
					this.SendPropertyChanged("FileHash");
					this.OnFileHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileSize", DbType="BigInt NOT NULL")]
		public long FileSize
		{
			get
			{
				return this._FileSize;
			}
			set
			{
				if ((this._FileSize != value))
				{
					this.OnFileSizeChanging(value);
					this.SendPropertyChanging();
					this._FileSize = value;
					this.SendPropertyChanged("FileSize");
					this.OnFileSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadCount", DbType="Int NOT NULL")]
		public int DownloadCount
		{
			get
			{
				return this._DownloadCount;
			}
			set
			{
				if ((this._DownloadCount != value))
				{
					this.OnDownloadCountChanging(value);
					this.SendPropertyChanging();
					this._DownloadCount = value;
					this.SendPropertyChanged("DownloadCount");
					this.OnDownloadCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_File", Storage="_Package", ThisKey="PackageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Package Package
		{
			get
			{
				return this._Package.Entity;
			}
			set
			{
				Package previousValue = this._Package.Entity;
				if (((previousValue != value) 
							|| (this._Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Package.Entity = null;
						previousValue.Files.Remove(this);
					}
					this._Package.Entity = value;
					if ((value != null))
					{
						value.Files.Add(this);
						this._PackageID = value.ID;
					}
					else
					{
						this._PackageID = default(int);
					}
					this.SendPropertyChanged("Package");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transfers")]
	public partial class Transfer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PackageID;
		
		private string _RecipientMail;
		
		private System.DateTime _CreatedAt;
		
		private EntityRef<Package> _Package;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnRecipientMailChanging(string value);
    partial void OnRecipientMailChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public Transfer()
		{
			this._Package = default(EntityRef<Package>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int NOT NULL")]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientMail", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string RecipientMail
		{
			get
			{
				return this._RecipientMail;
			}
			set
			{
				if ((this._RecipientMail != value))
				{
					this.OnRecipientMailChanging(value);
					this.SendPropertyChanging();
					this._RecipientMail = value;
					this.SendPropertyChanged("RecipientMail");
					this.OnRecipientMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_Transfer", Storage="_Package", ThisKey="PackageID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Package Package
		{
			get
			{
				return this._Package.Entity;
			}
			set
			{
				Package previousValue = this._Package.Entity;
				if (((previousValue != value) 
							|| (this._Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Package.Entity = null;
						previousValue.Transfers.Remove(this);
					}
					this._Package.Entity = value;
					if ((value != null))
					{
						value.Transfers.Add(this);
						this._PackageID = value.ID;
					}
					else
					{
						this._PackageID = default(int);
					}
					this.SendPropertyChanged("Package");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Logs")]
	public partial class Log
	{
		
		private int _ID;
		
		private System.DateTime _Date;
		
		private string _Thread;
		
		private string _Level;
		
		private string _Logger;
		
		private string _Message;
		
		private string _Exception;
		
		public Log()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thread", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Thread
		{
			get
			{
				return this._Thread;
			}
			set
			{
				if ((this._Thread != value))
				{
					this._Thread = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this._Level = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logger", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Logger
		{
			get
			{
				return this._Logger;
			}
			set
			{
				if ((this._Logger != value))
				{
					this._Logger = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(4000) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exception", DbType="VarChar(2000)")]
		public string Exception
		{
			get
			{
				return this._Exception;
			}
			set
			{
				if ((this._Exception != value))
				{
					this._Exception = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Packages")]
	public partial class Package : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _SenderMail;
		
		private string _Message;
		
		private string _Code;
		
		private bool _Scanned;
		
		private char _Status;
		
		private System.Nullable<System.DateTime> _ExpiresAt;
		
		private System.DateTime _CreatedAt;
		
		private EntitySet<File> _Files;
		
		private EntitySet<Transfer> _Transfers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSenderMailChanging(string value);
    partial void OnSenderMailChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnScannedChanging(bool value);
    partial void OnScannedChanged();
    partial void OnStatusChanging(char value);
    partial void OnStatusChanged();
    partial void OnExpiresAtChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiresAtChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public Package()
		{
			this._Files = new EntitySet<File>(new Action<File>(this.attach_Files), new Action<File>(this.detach_Files));
			this._Transfers = new EntitySet<Transfer>(new Action<Transfer>(this.attach_Transfers), new Action<Transfer>(this.detach_Transfers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderMail", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string SenderMail
		{
			get
			{
				return this._SenderMail;
			}
			set
			{
				if ((this._SenderMail != value))
				{
					this.OnSenderMailChanging(value);
					this.SendPropertyChanging();
					this._SenderMail = value;
					this.SendPropertyChanged("SenderMail");
					this.OnSenderMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scanned", DbType="Bit NOT NULL")]
		public bool Scanned
		{
			get
			{
				return this._Scanned;
			}
			set
			{
				if ((this._Scanned != value))
				{
					this.OnScannedChanging(value);
					this.SendPropertyChanging();
					this._Scanned = value;
					this.SendPropertyChanged("Scanned");
					this.OnScannedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Char(1) NOT NULL")]
		public char Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiresAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiresAt
		{
			get
			{
				return this._ExpiresAt;
			}
			set
			{
				if ((this._ExpiresAt != value))
				{
					this.OnExpiresAtChanging(value);
					this.SendPropertyChanging();
					this._ExpiresAt = value;
					this.SendPropertyChanged("ExpiresAt");
					this.OnExpiresAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_File", Storage="_Files", ThisKey="ID", OtherKey="PackageID")]
		public EntitySet<File> Files
		{
			get
			{
				return this._Files;
			}
			set
			{
				this._Files.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Package_Transfer", Storage="_Transfers", ThisKey="ID", OtherKey="PackageID")]
		public EntitySet<Transfer> Transfers
		{
			get
			{
				return this._Transfers;
			}
			set
			{
				this._Transfers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Files(File entity)
		{
			this.SendPropertyChanging();
			entity.Package = this;
		}
		
		private void detach_Files(File entity)
		{
			this.SendPropertyChanging();
			entity.Package = null;
		}
		
		private void attach_Transfers(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.Package = this;
		}
		
		private void detach_Transfers(Transfer entity)
		{
			this.SendPropertyChanging();
			entity.Package = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DisplayName;
		
		private string _CommonName;
		
		private string _GivenName;
		
		private string _Mail;
		
		private string _Department;
		
		private string _AccountName;
		
		private string _Country;
		
		private string _Location;
		
		private string _Url;
		
		private string _Company;
		
		private string _Title;
		
		private System.DateTime _CreatedAt;
		
		private string _Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnCommonNameChanging(string value);
    partial void OnCommonNameChanged();
    partial void OnGivenNameChanging(string value);
    partial void OnGivenNameChanged();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(100)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommonName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CommonName
		{
			get
			{
				return this._CommonName;
			}
			set
			{
				if ((this._CommonName != value))
				{
					this.OnCommonNameChanging(value);
					this.SendPropertyChanging();
					this._CommonName = value;
					this.SendPropertyChanged("CommonName");
					this.OnCommonNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivenName", DbType="NVarChar(100)")]
		public string GivenName
		{
			get
			{
				return this._GivenName;
			}
			set
			{
				if ((this._GivenName != value))
				{
					this.OnGivenNameChanging(value);
					this.SendPropertyChanging();
					this._GivenName = value;
					this.SendPropertyChanged("GivenName");
					this.OnGivenNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail", DbType="NVarChar(100)")]
		public string Mail
		{
			get
			{
				return this._Mail;
			}
			set
			{
				if ((this._Mail != value))
				{
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(100)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="NVarChar(100)")]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(100)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(100)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(100)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(100)", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Messages")]
	public partial class Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Culture;
		
		private string _LookupKey;
		
		private string _LookupMessage;
		
		private string _LocalizedMessage;
		
		private System.DateTime _CreatedAt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCultureChanging(string value);
    partial void OnCultureChanged();
    partial void OnLookupKeyChanging(string value);
    partial void OnLookupKeyChanged();
    partial void OnLookupMessageChanging(string value);
    partial void OnLookupMessageChanged();
    partial void OnLocalizedMessageChanging(string value);
    partial void OnLocalizedMessageChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public Message()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Culture", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string Culture
		{
			get
			{
				return this._Culture;
			}
			set
			{
				if ((this._Culture != value))
				{
					this.OnCultureChanging(value);
					this.SendPropertyChanging();
					this._Culture = value;
					this.SendPropertyChanged("Culture");
					this.OnCultureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LookupKey", DbType="Char(32) NOT NULL", CanBeNull=false)]
		public string LookupKey
		{
			get
			{
				return this._LookupKey;
			}
			set
			{
				if ((this._LookupKey != value))
				{
					this.OnLookupKeyChanging(value);
					this.SendPropertyChanging();
					this._LookupKey = value;
					this.SendPropertyChanged("LookupKey");
					this.OnLookupKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LookupMessage", DbType="NVarChar(1024)")]
		public string LookupMessage
		{
			get
			{
				return this._LookupMessage;
			}
			set
			{
				if ((this._LookupMessage != value))
				{
					this.OnLookupMessageChanging(value);
					this.SendPropertyChanging();
					this._LookupMessage = value;
					this.SendPropertyChanged("LookupMessage");
					this.OnLookupMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalizedMessage", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string LocalizedMessage
		{
			get
			{
				return this._LocalizedMessage;
			}
			set
			{
				if ((this._LocalizedMessage != value))
				{
					this.OnLocalizedMessageChanging(value);
					this.SendPropertyChanging();
					this._LocalizedMessage = value;
					this.SendPropertyChanged("LocalizedMessage");
					this.OnLocalizedMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Settings")]
	public partial class Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Login;
		
		private string _CompanyName;
		
		private string _CompanyLogo;
		
		private string _InternalUrl;
		
		private string _ExternalUrl;
		
		private string _UploadUrl;
		
		private string _StorageLocation;
		
		private string _RestrictSettingsToGroup;
		
		private string _LdapFilterName;
		
		private string _LdapFilterMail;
		
		private string _LdapFilterLogin;
		
		private int _LdapSizeLimit;
		
		private bool _MailSecure;
		
		private string _MailReplyTo;
		
		private int _UploadSizeLimit;
		
		private bool _UploadChunked;
		
		private string _ShareMailSubject;
		
		private string _ShareMailBodyPlain;
		
		private string _ShareMailBodyHtml;
		
		private string _ShareDefaultMessage;
		
		private string _RequestMailSubject;
		
		private string _RequestMailBodyPlain;
		
		private string _RequestMailBodyHtml;
		
		private string _RequestDefaultMessage;
		
		private string _UploadMailSubject;
		
		private string _UploadMailBodyPlain;
		
		private string _UploadMailBodyHtml;
		
		private string _UploadDefaultMessage;
		
		private string _OutlookInjectedHtml;
		
		private System.DateTime _CreatedAt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyLogoChanging(string value);
    partial void OnCompanyLogoChanged();
    partial void OnInternalUrlChanging(string value);
    partial void OnInternalUrlChanged();
    partial void OnExternalUrlChanging(string value);
    partial void OnExternalUrlChanged();
    partial void OnUploadUrlChanging(string value);
    partial void OnUploadUrlChanged();
    partial void OnStorageLocationChanging(string value);
    partial void OnStorageLocationChanged();
    partial void OnRestrictSettingsToGroupChanging(string value);
    partial void OnRestrictSettingsToGroupChanged();
    partial void OnLdapFilterNameChanging(string value);
    partial void OnLdapFilterNameChanged();
    partial void OnLdapFilterMailChanging(string value);
    partial void OnLdapFilterMailChanged();
    partial void OnLdapFilterLoginChanging(string value);
    partial void OnLdapFilterLoginChanged();
    partial void OnLdapSizeLimitChanging(int value);
    partial void OnLdapSizeLimitChanged();
    partial void OnMailSecureChanging(bool value);
    partial void OnMailSecureChanged();
    partial void OnMailReplyToChanging(string value);
    partial void OnMailReplyToChanged();
    partial void OnUploadSizeLimitChanging(int value);
    partial void OnUploadSizeLimitChanged();
    partial void OnUploadChunkedChanging(bool value);
    partial void OnUploadChunkedChanged();
    partial void OnShareMailSubjectChanging(string value);
    partial void OnShareMailSubjectChanged();
    partial void OnShareMailBodyPlainChanging(string value);
    partial void OnShareMailBodyPlainChanged();
    partial void OnShareMailBodyHtmlChanging(string value);
    partial void OnShareMailBodyHtmlChanged();
    partial void OnShareDefaultMessageChanging(string value);
    partial void OnShareDefaultMessageChanged();
    partial void OnRequestMailSubjectChanging(string value);
    partial void OnRequestMailSubjectChanged();
    partial void OnRequestMailBodyPlainChanging(string value);
    partial void OnRequestMailBodyPlainChanged();
    partial void OnRequestMailBodyHtmlChanging(string value);
    partial void OnRequestMailBodyHtmlChanged();
    partial void OnRequestDefaultMessageChanging(string value);
    partial void OnRequestDefaultMessageChanged();
    partial void OnUploadMailSubjectChanging(string value);
    partial void OnUploadMailSubjectChanged();
    partial void OnUploadMailBodyPlainChanging(string value);
    partial void OnUploadMailBodyPlainChanged();
    partial void OnUploadMailBodyHtmlChanging(string value);
    partial void OnUploadMailBodyHtmlChanged();
    partial void OnUploadDefaultMessageChanging(string value);
    partial void OnUploadDefaultMessageChanged();
    partial void OnOutlookInjectedHtmlChanging(string value);
    partial void OnOutlookInjectedHtmlChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public Setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(64)")]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyLogo", DbType="NVarChar(255)")]
		public string CompanyLogo
		{
			get
			{
				return this._CompanyLogo;
			}
			set
			{
				if ((this._CompanyLogo != value))
				{
					this.OnCompanyLogoChanging(value);
					this.SendPropertyChanging();
					this._CompanyLogo = value;
					this.SendPropertyChanged("CompanyLogo");
					this.OnCompanyLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalUrl", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string InternalUrl
		{
			get
			{
				return this._InternalUrl;
			}
			set
			{
				if ((this._InternalUrl != value))
				{
					this.OnInternalUrlChanging(value);
					this.SendPropertyChanging();
					this._InternalUrl = value;
					this.SendPropertyChanged("InternalUrl");
					this.OnInternalUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalUrl", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ExternalUrl
		{
			get
			{
				return this._ExternalUrl;
			}
			set
			{
				if ((this._ExternalUrl != value))
				{
					this.OnExternalUrlChanging(value);
					this.SendPropertyChanging();
					this._ExternalUrl = value;
					this.SendPropertyChanged("ExternalUrl");
					this.OnExternalUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadUrl", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string UploadUrl
		{
			get
			{
				return this._UploadUrl;
			}
			set
			{
				if ((this._UploadUrl != value))
				{
					this.OnUploadUrlChanging(value);
					this.SendPropertyChanging();
					this._UploadUrl = value;
					this.SendPropertyChanged("UploadUrl");
					this.OnUploadUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorageLocation", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string StorageLocation
		{
			get
			{
				return this._StorageLocation;
			}
			set
			{
				if ((this._StorageLocation != value))
				{
					this.OnStorageLocationChanging(value);
					this.SendPropertyChanging();
					this._StorageLocation = value;
					this.SendPropertyChanged("StorageLocation");
					this.OnStorageLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RestrictSettingsToGroup", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string RestrictSettingsToGroup
		{
			get
			{
				return this._RestrictSettingsToGroup;
			}
			set
			{
				if ((this._RestrictSettingsToGroup != value))
				{
					this.OnRestrictSettingsToGroupChanging(value);
					this.SendPropertyChanging();
					this._RestrictSettingsToGroup = value;
					this.SendPropertyChanged("RestrictSettingsToGroup");
					this.OnRestrictSettingsToGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LdapFilterName", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string LdapFilterName
		{
			get
			{
				return this._LdapFilterName;
			}
			set
			{
				if ((this._LdapFilterName != value))
				{
					this.OnLdapFilterNameChanging(value);
					this.SendPropertyChanging();
					this._LdapFilterName = value;
					this.SendPropertyChanged("LdapFilterName");
					this.OnLdapFilterNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LdapFilterMail", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string LdapFilterMail
		{
			get
			{
				return this._LdapFilterMail;
			}
			set
			{
				if ((this._LdapFilterMail != value))
				{
					this.OnLdapFilterMailChanging(value);
					this.SendPropertyChanging();
					this._LdapFilterMail = value;
					this.SendPropertyChanged("LdapFilterMail");
					this.OnLdapFilterMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LdapFilterLogin", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string LdapFilterLogin
		{
			get
			{
				return this._LdapFilterLogin;
			}
			set
			{
				if ((this._LdapFilterLogin != value))
				{
					this.OnLdapFilterLoginChanging(value);
					this.SendPropertyChanging();
					this._LdapFilterLogin = value;
					this.SendPropertyChanged("LdapFilterLogin");
					this.OnLdapFilterLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LdapSizeLimit", DbType="Int NOT NULL")]
		public int LdapSizeLimit
		{
			get
			{
				return this._LdapSizeLimit;
			}
			set
			{
				if ((this._LdapSizeLimit != value))
				{
					this.OnLdapSizeLimitChanging(value);
					this.SendPropertyChanging();
					this._LdapSizeLimit = value;
					this.SendPropertyChanged("LdapSizeLimit");
					this.OnLdapSizeLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailSecure", DbType="Bit NOT NULL")]
		public bool MailSecure
		{
			get
			{
				return this._MailSecure;
			}
			set
			{
				if ((this._MailSecure != value))
				{
					this.OnMailSecureChanging(value);
					this.SendPropertyChanging();
					this._MailSecure = value;
					this.SendPropertyChanged("MailSecure");
					this.OnMailSecureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailReplyTo", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string MailReplyTo
		{
			get
			{
				return this._MailReplyTo;
			}
			set
			{
				if ((this._MailReplyTo != value))
				{
					this.OnMailReplyToChanging(value);
					this.SendPropertyChanging();
					this._MailReplyTo = value;
					this.SendPropertyChanged("MailReplyTo");
					this.OnMailReplyToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadSizeLimit", DbType="Int NOT NULL")]
		public int UploadSizeLimit
		{
			get
			{
				return this._UploadSizeLimit;
			}
			set
			{
				if ((this._UploadSizeLimit != value))
				{
					this.OnUploadSizeLimitChanging(value);
					this.SendPropertyChanging();
					this._UploadSizeLimit = value;
					this.SendPropertyChanged("UploadSizeLimit");
					this.OnUploadSizeLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadChunked", DbType="Bit NOT NULL")]
		public bool UploadChunked
		{
			get
			{
				return this._UploadChunked;
			}
			set
			{
				if ((this._UploadChunked != value))
				{
					this.OnUploadChunkedChanging(value);
					this.SendPropertyChanging();
					this._UploadChunked = value;
					this.SendPropertyChanged("UploadChunked");
					this.OnUploadChunkedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShareMailSubject", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string ShareMailSubject
		{
			get
			{
				return this._ShareMailSubject;
			}
			set
			{
				if ((this._ShareMailSubject != value))
				{
					this.OnShareMailSubjectChanging(value);
					this.SendPropertyChanging();
					this._ShareMailSubject = value;
					this.SendPropertyChanged("ShareMailSubject");
					this.OnShareMailSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShareMailBodyPlain", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ShareMailBodyPlain
		{
			get
			{
				return this._ShareMailBodyPlain;
			}
			set
			{
				if ((this._ShareMailBodyPlain != value))
				{
					this.OnShareMailBodyPlainChanging(value);
					this.SendPropertyChanging();
					this._ShareMailBodyPlain = value;
					this.SendPropertyChanged("ShareMailBodyPlain");
					this.OnShareMailBodyPlainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShareMailBodyHtml", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ShareMailBodyHtml
		{
			get
			{
				return this._ShareMailBodyHtml;
			}
			set
			{
				if ((this._ShareMailBodyHtml != value))
				{
					this.OnShareMailBodyHtmlChanging(value);
					this.SendPropertyChanging();
					this._ShareMailBodyHtml = value;
					this.SendPropertyChanged("ShareMailBodyHtml");
					this.OnShareMailBodyHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShareDefaultMessage", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string ShareDefaultMessage
		{
			get
			{
				return this._ShareDefaultMessage;
			}
			set
			{
				if ((this._ShareDefaultMessage != value))
				{
					this.OnShareDefaultMessageChanging(value);
					this.SendPropertyChanging();
					this._ShareDefaultMessage = value;
					this.SendPropertyChanged("ShareDefaultMessage");
					this.OnShareDefaultMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestMailSubject", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string RequestMailSubject
		{
			get
			{
				return this._RequestMailSubject;
			}
			set
			{
				if ((this._RequestMailSubject != value))
				{
					this.OnRequestMailSubjectChanging(value);
					this.SendPropertyChanging();
					this._RequestMailSubject = value;
					this.SendPropertyChanged("RequestMailSubject");
					this.OnRequestMailSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestMailBodyPlain", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string RequestMailBodyPlain
		{
			get
			{
				return this._RequestMailBodyPlain;
			}
			set
			{
				if ((this._RequestMailBodyPlain != value))
				{
					this.OnRequestMailBodyPlainChanging(value);
					this.SendPropertyChanging();
					this._RequestMailBodyPlain = value;
					this.SendPropertyChanged("RequestMailBodyPlain");
					this.OnRequestMailBodyPlainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestMailBodyHtml", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string RequestMailBodyHtml
		{
			get
			{
				return this._RequestMailBodyHtml;
			}
			set
			{
				if ((this._RequestMailBodyHtml != value))
				{
					this.OnRequestMailBodyHtmlChanging(value);
					this.SendPropertyChanging();
					this._RequestMailBodyHtml = value;
					this.SendPropertyChanged("RequestMailBodyHtml");
					this.OnRequestMailBodyHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDefaultMessage", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string RequestDefaultMessage
		{
			get
			{
				return this._RequestDefaultMessage;
			}
			set
			{
				if ((this._RequestDefaultMessage != value))
				{
					this.OnRequestDefaultMessageChanging(value);
					this.SendPropertyChanging();
					this._RequestDefaultMessage = value;
					this.SendPropertyChanged("RequestDefaultMessage");
					this.OnRequestDefaultMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadMailSubject", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string UploadMailSubject
		{
			get
			{
				return this._UploadMailSubject;
			}
			set
			{
				if ((this._UploadMailSubject != value))
				{
					this.OnUploadMailSubjectChanging(value);
					this.SendPropertyChanging();
					this._UploadMailSubject = value;
					this.SendPropertyChanged("UploadMailSubject");
					this.OnUploadMailSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadMailBodyPlain", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UploadMailBodyPlain
		{
			get
			{
				return this._UploadMailBodyPlain;
			}
			set
			{
				if ((this._UploadMailBodyPlain != value))
				{
					this.OnUploadMailBodyPlainChanging(value);
					this.SendPropertyChanging();
					this._UploadMailBodyPlain = value;
					this.SendPropertyChanged("UploadMailBodyPlain");
					this.OnUploadMailBodyPlainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadMailBodyHtml", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UploadMailBodyHtml
		{
			get
			{
				return this._UploadMailBodyHtml;
			}
			set
			{
				if ((this._UploadMailBodyHtml != value))
				{
					this.OnUploadMailBodyHtmlChanging(value);
					this.SendPropertyChanging();
					this._UploadMailBodyHtml = value;
					this.SendPropertyChanged("UploadMailBodyHtml");
					this.OnUploadMailBodyHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadDefaultMessage", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string UploadDefaultMessage
		{
			get
			{
				return this._UploadDefaultMessage;
			}
			set
			{
				if ((this._UploadDefaultMessage != value))
				{
					this.OnUploadDefaultMessageChanging(value);
					this.SendPropertyChanging();
					this._UploadDefaultMessage = value;
					this.SendPropertyChanged("UploadDefaultMessage");
					this.OnUploadDefaultMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutlookInjectedHtml", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string OutlookInjectedHtml
		{
			get
			{
				return this._OutlookInjectedHtml;
			}
			set
			{
				if ((this._OutlookInjectedHtml != value))
				{
					this.OnOutlookInjectedHtmlChanging(value);
					this.SendPropertyChanging();
					this._OutlookInjectedHtml = value;
					this.SendPropertyChanged("OutlookInjectedHtml");
					this.OnOutlookInjectedHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
